@model PatientManagementSoftware.Models.DoctorViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-head">
    <h1>
        Update Doctor Details
    </h1>
</div>

@using (Html.BeginForm("Update", "Doctor")) // Specify controller and action
{
    @Html.AntiForgeryToken() // Add CSRF protection

    <div class="form-group">

        @Html.HiddenFor(m => m.DoctorID, new { @class = "form-control", required = "required", pattern = "(?=.{a-z}) (?=.{A_Z})", title = "Name canntot Contain any int value or Special Character" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name, "Name:")
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required", pattern = "(?=.{a-z}) (?=.{A_Z})", title = "Name canntot Contain any int value or Special Character" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Specialization, "Specialization:")
        @Html.TextBoxFor(m => m.Specialization, new { @class = "form-control", required = "required", pattern = "(?=.{a-z})(?=.{A_Z})" })
        @Html.ValidationMessageFor(m => m.Specialization, "", new { @class = "text-success" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ContactNumber, "Contact Number:")
        @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", placeholder = "Enter Contact Number", required = "required", pattern = "\\d{10}", title = "Mobile number must Contain 10 int digit Only" })
        @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(m => m.Availability, new { @class = "form-label" })
        @Html.DropDownListFor(m => m.Availability, new SelectList(new[]
         {
                new SelectListItem{Text="Available", Value="Available" },
                new SelectListItem{Text="Un-Available", Value="un-Available" },


         }, "Value", "Text"), "Select Doctor Availability", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Availability, "", new { @class = "form-text text-muted" })
    </div>

    <input type="submit" value="Save Doctor" class="full-length-button" />
}

